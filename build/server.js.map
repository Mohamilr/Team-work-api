{"version":3,"sources":["../src/server.js"],"names":["dotenv","config","app","use","port","process","env","PORT","bodyParser","json","extended","useTempFiles","req","res","next","setHeader","userRouter","articleRouter","gifRouter","getRouter","commentRouter","swaggerUi","serve","setup","apiDocs","status","message","error","listen","console","log"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AARA;AAOA;AAGAA,mBAAOC,MAAP,G,CAEA;;;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,IAAX,CAAgB;AAAEC,EAAAA,QAAQ,EAAG;AAAb,CAAhB,CAAR,E,CAEA;;AACAR,GAAG,CAACC,GAAJ,CAAQ,mCAAW;AACfQ,EAAAA,YAAY,EAAE;AADC,CAAX,CAAR;AAIAT,GAAG,CAACC,GAAJ,CAAQ,UAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AAEAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,0BAA9C;AAEAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,qCAA9C;AACAD,EAAAA,IAAI;AACP,CAPD,E,CASA;;AACAZ,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBa,oBAApB;AACAd,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBc,mBAApB;AACAf,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBe,eAAnB;AACAhB,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBgB,eAAnB;AACAjB,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBiB,mBAApB,E,CAEA;;AACAlB,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBkB,6BAAUC,KAAlC,EAAyCD,6BAAUE,KAAV,CAAgBC,mBAAhB,CAAzC,E,CAEA;;AACAtB,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACS,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAsB;AAClBgB,IAAAA,MAAM,EAAE,SADU;AAElBC,IAAAA,OAAO,EAAE;AAFS,GAAtB;AAIH,CALD,E,CAOA;;AACAxB,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACS,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBhB,IAAhB,CAAqB;AACjBgB,IAAAA,MAAM,EAAE,OADS;AAEjBE,IAAAA,KAAK,EAAE;AAFU,GAArB;AAIH,CALD;AAOAzB,GAAG,CAAC0B,MAAJ,CAAWxB,IAAX,EAAgB,YAAM;AAClByB,EAAAA,OAAO,CAACC,GAAR,6BAAiC1B,IAAjC;AACH,CAFD,E,CAIA;;eACeF,G","sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport dotenv from 'dotenv';\r\nimport fileUpload from 'express-fileupload';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport cors from 'cors';\r\n\r\n// routers\r\nimport userRouter from './routes/register.route';\r\nimport articleRouter from './routes/article.route';\r\nimport gifRouter from './routes/gif.route';\r\nimport getRouter from './routes/get.route';\r\nimport commentRouter from './routes/comment.route';\r\n\r\n// swagger documentation\r\nimport apiDocs from '../swagger.json'\r\n \r\ndotenv.config();\r\n\r\n// instantiate express\r\nconst app = express();\r\n\r\n// configure cors\r\napp.use(cors());\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\n// configure bodyparser\r\napp.use(bodyParser.json({ extended : true }));\r\n\r\n// configure file-upload\r\napp.use(fileUpload({\r\n    useTempFiles: true\r\n}))\r\n\r\napp.use((req, res, next) => {\r\n    res.setHeader('Access-Control-Allow-Origin', '*')\r\n\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PATCH, DELETE')\r\n\r\n    res.setHeader('Access-Control-Allow-Headers', 'Origin, Content-Type, Authorization')\r\n    next();\r\n})\r\n\r\n// app router\r\napp.use('/api/v1/', userRouter);\r\napp.use('/api/v1/', articleRouter);\r\napp.use('/api/v1', gifRouter);\r\napp.use('/api/v1', getRouter);\r\napp.use('/api/v1/', commentRouter);\r\n\r\n// swagger route\r\napp.use('/api/v1/docs', swaggerUi.serve, swaggerUi.setup(apiDocs))\r\n\r\n// welcome route\r\napp.use('/', (req, res) => {\r\n    res.status(200).json(({\r\n        status: 'success',\r\n        message: 'welcome to the team work api'\r\n    }))\r\n})\r\n\r\n// wronge routes\r\napp.use('*', (req, res) => {\r\n    res.status(404).json({\r\n        status: 'error',\r\n        error: 'wrong route'\r\n    })\r\n})\r\n\r\napp.listen(port,() => {\r\n    console.log(`app is running on ${port}`)\r\n})\r\n\r\n// export app for test\r\nexport default app;"],"file":"server.js"}