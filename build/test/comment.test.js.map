{"version":3,"sources":["../../src/test/comment.test.js"],"names":["chai","use","chaiHttp","should","describe","skip","id","it","done","request","app","post","set","process","env","TEST_TOKEN","send","comment","authorId","end","err","res","have","status","body","be","a"],"mappings":"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","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\n\r\nimport app from '../server';\r\n\r\n// import token from './register.test';\r\n\r\nchai.use(chaiHttp);\r\nchai.should();\r\n\r\ndescribe.skip('POST comment', () => {\r\n    // test article comment\r\n    describe('POST article comment', () => {\r\n        const id = 2;\r\n\r\n        // error on empty body values\r\n        it('should give an error on empty body values', (done) => {\r\n            chai.request(app)\r\n                .post(`api/v1/articles/${id}/comment`)\r\n                .set('Authorization', `bearer ${process.env.TEST_TOKEN}`)\r\n                .send({\r\n                    comment: '',\r\n                    authorId: 1\r\n                })\r\n                .end((err, res) => {\r\n                    res.should.have.status(400);\r\n                    res.body.should.be.a('object');\r\n                })\r\n            done();\r\n        })\r\n\r\n        // error on wrong token\r\n        it('should give an error on wrong token', (done) => {\r\n            chai.request(app)\r\n                .post(`api/v1/articles/${id}/comment`)\r\n                .set('Authorization', `bearer wrong token`)\r\n                .send({\r\n                    comment: 'nice article.',\r\n                    authorId: 1\r\n                })\r\n                .end((err, res) => {\r\n                    res.should.have.status(403);\r\n                    res.body.should.be.a('object');\r\n                })\r\n            done();\r\n        })\r\n\r\n        // post a comment\r\n        it('should post an article comment', (done) => {\r\n            chai.request(app)\r\n                .post(`api/v1/articles/${id}/comment`)\r\n                .set('Authorization', `bearer ${process.env.TEST_TOKEN}`)\r\n                .send({\r\n                    comment: 'nice article.',\r\n                    authorId: 1\r\n                })\r\n                .end((err, res) => {\r\n                    res.should.have.status(201);\r\n                    res.body.should.be.a('object');\r\n                })\r\n            done();\r\n        })\r\n    })\r\n\r\n\r\n    // test gif comment\r\n    describe('POST gif comment', () => {\r\n        const id = 1;\r\n\r\n        // error on empty body values\r\n        it('should give an error on empty body values', (done) => {\r\n            chai.request(app)\r\n                .post(`/api/v1/gifs/${id}/comment`)\r\n                .set('Authorization', `bearer ${process.env.TEST_TOKEN}`)\r\n                .send({\r\n                    comment: '',\r\n                    authorId: 1\r\n                })\r\n                .end((err, res) => {\r\n                    res.should.have.status(400);\r\n                    res.body.should.be.a('object');\r\n                })\r\n            done();\r\n        })\r\n\r\n        // error on wromg token\r\n        it('should give an error on wrong token', (done) => {\r\n            chai.request(app)\r\n                .post(`/api/v1/gifs/${id}/comment`)\r\n                .set('Authorization', `bearer wrong token`)\r\n                .send({\r\n                    comment: 'what a funny gif.',\r\n                    authorId: 1\r\n                })\r\n                .end((err, res) => {\r\n                    res.should.have.status(403);\r\n                    res.body.should.be.a('object');\r\n                })\r\n            done();\r\n        })\r\n\r\n\r\n        // post gif comment\r\n        it('should post a gif comment', (done) => {\r\n            chai.request(app)\r\n                .post(`/api/v1/gifs/${id}/comment`)\r\n                .set('Authorization', `bearer ${process.env.TEST_TOKEN}`)\r\n                .send({\r\n                    comment: 'what a funny gif.',\r\n                    authorId: 1\r\n                })\r\n                .end((err, res) => {\r\n                    res.should.have.status(201);\r\n                    res.body.should.be.a('object');\r\n                })\r\n            done();\r\n        })\r\n    })\r\n})"],"file":"comment.test.js"}